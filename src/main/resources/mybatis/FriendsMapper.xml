<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lhs.weichat.mapper.FriendsMapper" >
  <resultMap id="BaseResultMap" type="com.lhs.weichat.bean.Friends" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="remark_name" property="remarkName" jdbcType="VARCHAR" />
    <result column="shield" property="shield" jdbcType="BIT" />
    <result column="visible" property="visible" jdbcType="INTEGER" />
    <result column="friend_id" property="friendId" jdbcType="INTEGER" />
    <result column="friends_group_id" property="friendsGroupId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, remark_name, shield, visible, friend_id, friends_group_id, user_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_friends
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_friends
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.lhs.weichat.bean.Friends" >
    insert into t_friends (id, remark_name, shield, 
      visible, friend_id, friends_group_id, 
      user_id)
    values (#{id,jdbcType=INTEGER}, #{remarkName,jdbcType=VARCHAR}, #{shield,jdbcType=BIT}, 
      #{visible,jdbcType=INTEGER}, #{friendId,jdbcType=INTEGER}, #{friendsGroupId,jdbcType=INTEGER}, 
      #{userId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.lhs.weichat.bean.Friends" >
    insert into t_friends
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="remarkName != null" >
        remark_name,
      </if>
      <if test="shield != null" >
        shield,
      </if>
      <if test="visible != null" >
        visible,
      </if>
      <if test="friendId != null" >
        friend_id,
      </if>
      <if test="friendsGroupId != null" >
        friends_group_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="remarkName != null" >
        #{remarkName,jdbcType=VARCHAR},
      </if>
      <if test="shield != null" >
        #{shield,jdbcType=BIT},
      </if>
      <if test="visible != null" >
        #{visible,jdbcType=INTEGER},
      </if>
      <if test="friendId != null" >
        #{friendId,jdbcType=INTEGER},
      </if>
      <if test="friendsGroupId != null" >
        #{friendsGroupId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lhs.weichat.bean.Friends" >
    update t_friends
    <set >
      <if test="remarkName != null" >
        remark_name = #{remarkName,jdbcType=VARCHAR},
      </if>
      <if test="shield != null" >
        shield = #{shield,jdbcType=BIT},
      </if>
      <if test="visible != null" >
        visible = #{visible,jdbcType=INTEGER},
      </if>
      <if test="friendId != null" >
        friend_id = #{friendId,jdbcType=INTEGER},
      </if>
      <if test="friendsGroupId != null" >
        friends_group_id = #{friendsGroupId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lhs.weichat.bean.Friends" >
    update t_friends
    set remark_name = #{remarkName,jdbcType=VARCHAR},
      shield = #{shield,jdbcType=BIT},
      visible = #{visible,jdbcType=INTEGER},
      friend_id = #{friendId,jdbcType=INTEGER},
      friends_group_id = #{friendsGroupId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="getFriendsByUserId" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List"/>
    from t_friends
    where user_id = #{userId, jdbcType=INTEGER}
  </select>

  <select id="findFriendsByUserIdAndFriendId" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List"/>
    from t_friends
    where user_id = #{userId, jdbcType=INTEGER} and friend_id = #{friendId, jdbcType=INTEGER}
    limit 1
  </select>

  <select id="getFriendsByUserIdAndFriendsId" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List"/>
    from t_friends
    where user_id = #{userId, jdbcType=INTEGER} and friend_id= #{friendId, jdbcType=INTEGER}
  </select>
</mapper>